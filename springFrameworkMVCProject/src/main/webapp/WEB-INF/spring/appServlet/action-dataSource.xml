<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">




<!-- 3.JNDI 이용해서 Connection Pooling 이용 
JNDI-name은 context.xml에 resource로 등록한다.
주소:
https://tomcat.apache.org/tomcat-9.0-doc/jndi-datasource-examples-howto.html#Oracle_8i,_9i_&_10g
여기서 복사해서-->

<jee:jndi-lookup id="dataSource" jndi-name="jdbc/myoracle"   resource-ref="true" />

<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<property name="dataSource" ref="dataSource"></property>
<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
                                                                  <!--Mapper라고 끝나는것..  -->
<property name="mapperLocations" value="classpath:mybatis/mappers/*Mapper.xml" />
</bean>

<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactory"></constructor-arg>
</bean>



	<!-- bean을 어떻게 만드냐면 new org.springframework.beans.factory.config.PropertyPlaceholderConfigurer() -->
<!-- 	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"
			value="/WEB-INF/spring/appServlet/oracleDBinfo.properties" />
		<property name="fileEncoding" value="UTF-8" />
	</bean>

 -->
 
 <!--2. apache 제공하는 Connection pooling 이용하기 위해서. -->
	<!-- 	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
 -->


	<!--DataSource(인터페이스타입) dataSource = new org.springframework.jdbc.datasource.DriverManagerDataSource -->
	<!--1.application에서 요청할 때마다 connection을 만든다
		 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${jdbc.driverClassName}" /> <property 
		name="url" value="${jdbc.url}" /> <property name="username" value="${jdbc.username}" 
		/> <property name="password" value="${jdbc.password}" /> 
		</bean> -->



</beans>


